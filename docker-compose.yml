version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
      no_cache: true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./fem:/app/fem
      - ./examples:/app/examples
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    networks:
      - acoustic-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # frontend:
  #   build:
  #     context: .
  #     dockerfile: docker/Dockerfile.frontend
  #     no_cache: true
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000
  #     - REACT_APP_WS_URL=ws://localhost:8000
  #   depends_on:
  #     - backend
  #   networks:
  #     - acoustic-net
  #   restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - acoustic-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:

networks:
  acoustic-net:
    driver: bridge
